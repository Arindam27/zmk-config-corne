/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        optimizeimport_macro: optimizeimport {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp O>,
                <&macro_release>,
                <&kp LEFT_ALT &kp LEFT_CONTROL>;

            label = "OPTIMIZEIMPORT";
        };

        thisisunsafe_macro: thisisunsafe_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp T &kp H &kp I &kp S &kp I &kp S &kp U &kp N &kp S &kp A &kp F &kp E>;

            label = "THISISUNSAFE_MACRO";
        };

        formatcode_macro: formatcode_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LEFT_GUI>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_GUI &kp LEFT_ALT>;

            label = "FORMATCODE_MACRO";
        };

        video_macro: video_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp NUMBER_5>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "VIDEO_MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        printscreen {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <39 40 41>;
            layers = <0>;
            timeout-ms = <60>;
            require-prior-idle-ms = <60>;
        };

        btclear {
            bindings = <&none>;
            key-positions = <11 23 35>;
            layers = <2>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <0 12 24 35 11 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U  &kp I         &kp O    &kp P     &kp BSPC
&lt 3 CAPSLOCK  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J  &kp K         &kp L    &kp SEMI  &kp ENTER
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                              &kp LEFT_WIN  &mo 2  &kp LCTRL    &kp SPACE  &mo 1  &kp LEFT_ALT
            >;
        };

        numbersymbol {
            bindings = <
&kp TAB         &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT         &kp CARET  &kp AMPERSAND  &kp STAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&kp CLCK        &kp N1           &kp N2  &kp N3    &kp N4      &kp N5              &kp MINUS  &kp UNDER      &kp APOS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&kp LEFT_SHIFT  &kp N6           &kp N7  &kp N8    &kp N9      &kp N0              &kp PLUS   &kp EQUAL      &kp TILDE  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp RIGHT_SHIFT
                                         &trans    &trans      &kp LEFT_CONTROL    &trans     &trans         &trans
            >;
        };

        function {
            bindings = <
&kp ESCAPE      &kp F1        &kp F2        &kp F3        &kp F4           &kp F5              &kp F6    &kp F7     &kp F8          &kp F9         &kp F10  &kp DEL
&kp LEFT_SHIFT  &kp C_PREV    &kp C_NEXT    &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE    &kp HOME  &kp PG_UP  &kp UP_ARROW    &kp PAGE_DOWN  &kp END  &kp C_BRIGHTNESS_INC
&kp LCTRL       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4        &trans    &kp LEFT   &kp DOWN_ARROW  &kp RIGHT      &trans   &kp C_BRI_DEC
                                            &kt C_MUTE    &trans           &trans              &trans    &trans     &trans
            >;
        };

        mousecontrol {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
